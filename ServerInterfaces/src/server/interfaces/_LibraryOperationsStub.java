package server.interfaces;


/**
* server/interfaces/_LibraryOperationsStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ServerInterfaces.idl
* Friday, March 8, 2019 1:13:06 PM IST
*/

public class _LibraryOperationsStub extends org.omg.CORBA.portable.ObjectImpl implements server.interfaces.LibraryOperations
{

  public boolean userExists (String userId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("userExists", true);
                $out.write_string (userId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return userExists (userId        );
            } finally {
                _releaseReply ($in);
            }
  } // userExists


  //Manager operations
  public boolean addItem (String managerID, String itemID, String itemName, int quantity) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addItem", true);
                $out.write_string (managerID);
                $out.write_string (itemID);
                $out.write_string (itemName);
                $out.write_long (quantity);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addItem (managerID, itemID, itemName, quantity        );
            } finally {
                _releaseReply ($in);
            }
  } // addItem

  public int removeItem (String managerID, String itemID, int quantity) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeItem", true);
                $out.write_string (managerID);
                $out.write_string (itemID);
                $out.write_long (quantity);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeItem (managerID, itemID, quantity        );
            } finally {
                _releaseReply ($in);
            }
  } // removeItem

  public server.interfaces.Book[] listAvailableItems (String managerID) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listAvailableItems", true);
                $out.write_string (managerID);
                $in = _invoke ($out);
                server.interfaces.Book $result[] = server.interfaces.BooksHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listAvailableItems (managerID        );
            } finally {
                _releaseReply ($in);
            }
  } // listAvailableItems


  //Student operations
  public int borrowItem (String userID, String itemID, String numberOfDays) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("borrowItem", true);
                $out.write_string (userID);
                $out.write_string (itemID);
                $out.write_string (numberOfDays);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return borrowItem (userID, itemID, numberOfDays        );
            } finally {
                _releaseReply ($in);
            }
  } // borrowItem

  public server.interfaces.Book[] findItem (String userID, String itemName) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("findItem", true);
                $out.write_string (userID);
                $out.write_string (itemName);
                $in = _invoke ($out);
                server.interfaces.Book $result[] = server.interfaces.BooksHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return findItem (userID, itemName        );
            } finally {
                _releaseReply ($in);
            }
  } // findItem

  public boolean returnItem (String userID, String itemID) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("returnItem", true);
                $out.write_string (userID);
                $out.write_string (itemID);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return returnItem (userID, itemID        );
            } finally {
                _releaseReply ($in);
            }
  } // returnItem

  public boolean addToWaitingList (String userID, String itemID) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addToWaitingList", true);
                $out.write_string (userID);
                $out.write_string (itemID);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addToWaitingList (userID, itemID        );
            } finally {
                _releaseReply ($in);
            }
  } // addToWaitingList

  public boolean addToWaitingListOverloaded (String userID, String itemID, String oldItemID) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addToWaitingListOverloaded", true);
                $out.write_string (userID);
                $out.write_string (itemID);
                $out.write_string (oldItemID);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addToWaitingListOverloaded (userID, itemID, oldItemID        );
            } finally {
                _releaseReply ($in);
            }
  } // addToWaitingListOverloaded

  public int exchangeItem (String userID, String newItemID, String oldItemID) throws server.interfaces.GeneralException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exchangeItem", true);
                $out.write_string (userID);
                $out.write_string (newItemID);
                $out.write_string (oldItemID);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/interfaces/GeneralException:1.0"))
                    throw server.interfaces.GeneralExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return exchangeItem (userID, newItemID, oldItemID        );
            } finally {
                _releaseReply ($in);
            }
  } // exchangeItem

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server/interfaces/LibraryOperations:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LibraryOperationsStub
